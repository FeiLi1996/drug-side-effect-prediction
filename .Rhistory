library(tidyverse)
library(caTools)
library(readr)
library(data.table)
library(openxlsx)
df<-openxlsx::read.xlsx('dataset.xlsx')
datatable <- as.data.table(df)
datatable
#view summary of dataset
summary(df)
glimpse(df)
#Temporary converts a datatable's character datatypes into factor. This way when summarize function is used, it lists out the counts of the categorical variables
factorize_str <- function (dt){
#Making a copy to not affect the original datatable
dt_copy <- copy(dt)
for (col_name in colnames(dt_copy)){
if (is.character(dt_copy[[col_name]])){
set(dt_copy, j = col_name, value = as.factor(dt_copy[[col_name]]))
}
}
dt_copy
}
df<-openxlsx::read.xlsx('dataset.xlsx')
dt <- as.data.table(df)
dt
#view summary of dataset
summary(factorize_str(dt)
glimpse(dt)
df<-openxlsx::read.xlsx('dataset.xlsx')
dt <- as.data.table(df)
dt
#view summary of dataset
summary(factorize_str(dt))
glimpse(dt)
library(tidyverse)
library(caTools)
library(readr)
library(data.table)
library(openxlsx)
library(rpart)
library(rpart.plot)
library(tidyverse)
library(caTools)
library(readr)
library(data.table)
library(openxlsx)
library(rpart)
library(rpart.plot)
library(caret)
df<-openxlsx::read.xlsx('dataset.xlsx')
dt <- as.data.table(df)
dt
#view summary of dataset
summary(factorize_str(dt))
glimpse(dt)
trainIndex <- createDataPartition(dt$has_aki, p = .8,
list = FALSE,
times = 1)
head(trainIndex)
train_dt <- dt[ trainIndex,]
test_dt  <- dt[-trainIndex,]
train_dt <- dt[ trainIndex,]
test_dt  <- dt[-trainIndex,]
prop.table(table(train_dt$has_aki))
prop.table(table(test_dt$has_aki))
trainIndex <- createDataPartition(dt$has_aki, p = .7,
list = FALSE,
times = 1)
head(trainIndex)
train_dt <- dt[ trainIndex,]
test_dt  <- dt[-trainIndex,]
prop.table(table(train_dt$has_aki))
prop.table(table(test_dt$has_aki))
